<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Core.Resources</name>
    </assembly>
    <members>
        <member name="T:Core.Resources.EnglishResources">
            <summary>
            Klasa zawiera angielską kulturę i umożliwia pobieranie napisów dla tej wersji
            językowej
            </summary>
        </member>
        <member name="F:Core.Resources.EnglishResources.Culture">
            <summary>
            Kultura angielska
            </summary>
        </member>
        <member name="M:Core.Resources.EnglishResources.GetString(System.String,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem (wersję angielską)
            </summary>
            <param name="id">Klucz, pod którym zapisany jest napis</param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="T:Core.Resources.NewResManager">
            <summary>
            Singleton odpowiedzialny za pobieranie napisów w odpowiedniej
            wersji językowej z pliku zasobów
            </summary>
        </member>
        <member name="M:Core.Resources.NewResManager.SetContext(System.String)">
            <summary>
            Ustawia kontekst dla wyszukiwania napisów - niektóre napisy mogą mieć wiele wersji
            w zależności od kontekstu. UWAGA! Kontekst nie powinien być nadużywany! Jego głównym
            celem jest zapewnienie możliwości lokalizacji tekstów per odbiorca (np. sieć sklepów)!
            Nazwa jest zawsze zamieniana na małe litery!
            </summary>
            <param name="ctx">Nazwa kontekstu</param>
        </member>
        <member name="M:Core.Resources.NewResManager.GetString(System.String,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem
            </summary>
            <param name="id">Klucz, pod którym zapisany jest napis</param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="M:Core.Resources.NewResManager.GetString(System.String,System.Globalization.CultureInfo,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem
            </summary>
            <param name="id">Klucz, pod którym zapisany jest napis</param>
            <param name="cultureInfo">Język dla którego chcemy napis</param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="M:Core.Resources.NewResManager.GetStringUnchecked(System.String,System.String,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem bez kontroli assembly
            </summary>
            <param name="assemblyName">Nazwa assembly bez .dll, np. Core.Types</param>
            <param name="resIdSuffix">Sufix który będzie dodany do nazwy assembly. Np. gdy będzie to
            KeyValueNotSet, to szukany będzie klucz Core.Types.KeyValueNotSet</param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="M:Core.Resources.NewResManager.GetStringUnchecked(System.String,System.String,System.Globalization.CultureInfo,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem bez kontroli assembly
            </summary>
            <param name="assemblyName">Nazwa assembly bez .dll, np. Core.Types</param>
            <param name="resIdSuffix">Sufix który będzie dodany do nazwy assembly. Np. gdy będzie to
            KeyValueNotSet, to szukany będzie klucz Core.Types.KeyValueNotSet</param>
            <param name="cultureInfo">Język dla którego chcemy napis</param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="M:Core.Resources.NewResManager.GetFormattedStringInternal(System.String,Core.Resources.ResourceCheck,System.Reflection.Assembly,System.Globalization.CultureInfo,System.Object[])">
            <exception cref="T:System.ArgumentOutOfRangeException"><c>id</c> is out of range.</exception>
        </member>
        <member name="M:Core.Resources.NewResManager.GetStringInternal(System.String,Core.Resources.ResourceCheck,System.Reflection.Assembly,System.Globalization.CultureInfo)">
            <exception cref="T:System.ArgumentOutOfRangeException"><c>id</c> is out of range.</exception>
        </member>
        <member name="P:Core.Resources.NewResManager.Instance">
            <summary>
            Instancja singletonu.
            </summary>
        </member>
        <member name="P:Core.Resources.NewResManager.Culture">
            <summary>
            Aktualnie ustawiona kultura
            </summary>
        </member>
        <member name="T:Core.Resources.ResourceCheck">
            <summary>
            Enum mówiący o tym jaką walidację przeprowadzać
            </summary>
        </member>
        <member name="F:Core.Resources.ResourceCheck.Local">
            <summary>
            Sprawdzenie lokalności assembly - nie można się odwołać do resource'a z innego assembly
            </summary>
        </member>
        <member name="F:Core.Resources.ResourceCheck.Global">
            <summary>
            Odwołanie globalne - można pobrać resoure'a z innego assembly
            </summary>
        </member>
        <member name="T:Core.Resources.ResManager">
            <summary>
            Singleton odpowiedzialny za pobieranie napisów w odpowiedniej
            wersji językowej z pliku zasobów
            </summary>
        </member>
        <member name="M:Core.Resources.ResManager.GetString(System.String,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem
            </summary>
            <param name="id">Klucz, pod którym zapisany jest napis</param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="M:Core.Resources.ResManager.GetString(System.String,Core.Resources.ResourceCheck,System.Object[])">
            <summary>
            Pobiera napis skojarzony z podanym kluczem
            </summary>
            <param name="id">Klucz, pod którym zapisany jest napis</param>
            <param name="check">Określa czy ma być przeprowadzona walidacja </param>
            <param name="values">lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Napis skojarzony z kluczem</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"> nie znaleziono klucza </exception>
        </member>
        <member name="M:Core.Resources.ResManager.SetContext(System.String)">
            <summary>
            Ustawia kontekst dla wyszukiwnia napisów - niektóre napisy mogą mieć wiele wersji
            w zależności od kontekstu. UWAGA! Kontekst nie powinien być nadużywany! Jego głównym
            celem jest zapewnienie możliwości lokalizacji tekstów per odbiorca (np. sieć sklepów)!
            Nazwa jest zawsze zamieniana na małe litery!
            </summary>
            <param name="ctx">Nazwa kontekstu</param>
        </member>
        <member name="M:Core.Resources.ResManager.GetString(System.String,Core.Resources.ResourceCheck,System.Reflection.Assembly,System.Object[])">
            <exception cref="T:System.ArgumentOutOfRangeException"><c>id</c> is out of range.</exception>
        </member>
        <member name="M:Core.Resources.ResManager.GetString(System.String,Core.Resources.ResourceCheck,System.Reflection.Assembly)">
            <exception cref="T:System.ArgumentOutOfRangeException"><c>id</c> is out of range.</exception>
        </member>
        <member name="P:Core.Resources.ResManager.Instance">
            <summary>
            Instancja singletonu.
            </summary>
        </member>
        <member name="T:Core.Resources.ResString">
            <summary>
            Klasa przechowująca odczytany z resource'ów string wraz z identyfikatorem po którym nastąpiło
            jego odszukanie. Dzięki temu można w innym miejscu zalogować identyfikator resource'a nie
            ujawniając przy tym samego odczytanego tekstu (który może zawierać tajne dane).
            </summary>
        </member>
        <member name="M:Core.Resources.ResString.#ctor(System.String,System.Object[])">
            <summary>
            Inicjuje nowy obiekt. Następuje weryfikacja, czy zgłaszające assembly jest uprawnione do
            pobrania tej wartości.
            </summary>
            <param name="resId">Id resource'a</param>
            <param name="values">Lista wartości do wypełnienia parametrów w stringu</param>
        </member>
        <member name="M:Core.Resources.ResString.NewUnchecked(System.String,System.String,System.Object[])">
            <summary>
            Zwraca nowy obiekt <see cref="T:Core.Resources.ResString"/> bez weryfikacji assembly. Umożliwia to pobranie
            wartości klucza z innego assembly
            </summary>
            <param name="assemblyName">Nazwa assembly bez .dll, np. Core.Types</param>
            <param name="resIdSuffix">Sufix który będzie dodany do nazwy assembly. Np. gdy będzie to
            KeyValueNotSet, to szukany będzie klucz Core.Types.KeyValueNotSet</param>
            <param name="values">Lista wartości do wypełnienia parametrów w stringu</param>
            <returns>Nowy obiekt <see cref="T:Core.Resources.ResString"/></returns>
        </member>
        <member name="M:Core.Resources.ResString.InsertAtBeginning(System.String)">
            <summary>
            Wstawia na początek tekstu podany łańcuch. <see cref="P:Core.Resources.ResString.ResId"/> nie ulega modyfikacji.
            </summary>
            <param name="text">Łańcuch do wstawienia</param>
            <returns>Nowy obiekt powstały z operacji wstawienia.</returns>
        </member>
        <member name="M:Core.Resources.ResString.op_Addition(Core.Resources.ResString,System.String)">
            <summary>
            Operator dodawania 
            </summary>
        </member>
        <member name="M:Core.Resources.ResString.op_Addition(Core.Resources.ResString,Core.Resources.ResString)">
            <summary>
            Operator dodawania 
            </summary>
        </member>
        <member name="P:Core.Resources.ResString.ResId">
            <summary>Zwraca identyfikator resource'a</summary>
        </member>
        <member name="P:Core.Resources.ResString.Text">
            <summary>Zwraca tekst pobrany z pliku zasobów</summary>
        </member>
    </members>
</doc>
